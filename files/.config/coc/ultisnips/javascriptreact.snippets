# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

# ---------------------------------------------------------------------------------------
# PropTypes definitions only

snippet sPropTypes "React PropTypes" b
${1}.propTypes = {
    /**
    *
    */
}

${1}.defaultProps = {
}
endsnippet

# ---------------------------------------------------------------------------------------
# React functional component

snippet sRFC "React Function Component" b
import React , { useEffect, useState } from 'react'
import PropTypes from 'prop-types'

function ${1}({
}) {
    return (
    )
}

${1}.propTypes = {
    /**
    *
    */
}

${1}.defaultProps = {
}

export default ${1}
endsnippet

# ---------------------------------------------------------------------------------------
# React functional component with MUI

snippet sRFC-mui-makeStyles "React Function Component" b
import React , { useEffect, useState } from 'react'
import PropTypes from 'prop-types'

import { makeStyles } from '@material-ui/styles'

const useStyles = makeStyles(theme => ({
})

function ${1}({
}) {
    const classes = useStyles()

    return (
    )
}

${1}.propTypes = {
    /**
    *
    */
}

${1}.defaultProps = {
}

export default ${1}
endsnippet

# ---------------------------------------------------------------------------------------
# React useState value

snippet sUseState "React useState hook" b
const [${1}, set${1}] = useState(${2})
endsnippet

# ---------------------------------------------------------------------------------------
# React useEffect

snippet sUseEffect "React useEffect" b
useEffect(() => {
    ${2}
}, [${1}])
endsnippet
